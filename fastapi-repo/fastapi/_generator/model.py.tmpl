from typing import Optional
from sqlmodel import Field, SQLModel

# Jinja2テンプレートによる自動生成

# 主にPOST/PUTのBODYに利用するモデル
# 新規登録時にAUTO_INCREMENTのカラムは不要なので除外する
class {{ table_name }}Base(SQLModel):
{% for column in meta %}
{% if not column.column_autoincrement %}
{% if 'INTEGER' in column.column_type %}
{% set type = 'int' %}
{% else %}
{% set type = 'str' %}
{% endif %}
{% if  column.column_nullable  and column.column_primary_key %}
{% set type = 'Optional[' + type + '] = Field(default=None, primary_key=True)' %}
{% elif  column.column_nullable and not column.column_primary_key %}
{% set type = 'Optional[' + type + '] = None' %}
{% elif not column.column_nullable and column.column_primary_key %}
{% set type = type + ' = Field(primary_key=True)' %}
{% endif %}
    {{ column.column_name }}: {{ type }}
{% endif %}
{% endfor %}
    pass

# テーブル用のモデル
# crud内でselectやfrom_ormで利用する
class {{ table_name }}({{ table_name }}Base, table=True):
{% for column in meta %}
{% if column.column_autoincrement %}
{% if 'VARCHAR' in column.column_type %}
{% set type = 'str' %}
{% else %}
{% set type = 'int' %}
{% endif %}
{% if  column.column_primary_key %}
{% set type = 'Optional[' + type + '] = Field(default=None, primary_key=True)' %}
{% else %}
{% set type = 'Optional[' + type + '] = None' %}
{% endif %}
    {{ column.column_name }}: {{ type }}
{% endif %}
{% endfor %}
    pass


# レスポンスモデルとして利用する
class {{ table_name }}Read({{ table_name }}Base):
{% for column in meta %}
{% if column.column_autoincrement %}
{% if 'VARCHAR' in column.column_type %}
{% set type = 'str' %}
{% else %}
{% set type = 'int' %}
{% endif %}
    {{ column.column_name }}: {{ type }}
{% endif %}
{% endfor %}
    pass


# PATCHのBODYに利用するモデル
# 更新する要素だけあればよいので
# バリデーションを通すために全部Optionにする
class {{ table_name }}Patch(SQLModel):
{% for column in meta %}
{% if not column.column_autoincrement %}
{% if 'VARCHAR' in column.column_type %}
{% set type = 'str' %}
{% else %}
{% set type = 'int' %}
{% endif %}
    {{ column.column_name }}: Optional[{{ type }}] = None
{% endif %}
{% endfor %}
    pass

